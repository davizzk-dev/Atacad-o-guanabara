const { getCatalogProducts, getDynamicCategories } = require('../lib/data')

async function testCatalogLoading() {
  try {
    console.log('üß™ Testando carregamento do cat√°logo...')
    
    // Testar carregamento de produtos
    console.log('\nüì¶ Carregando produtos...')
    const products = await getCatalogProducts()
    console.log(`‚úÖ Produtos carregados: ${products.length}`)
    
    if (products.length > 0) {
      console.log('\nüìã Primeiros 5 produtos:')
      products.slice(0, 5).forEach((product, index) => {
        console.log(`   ${index + 1}. ${product.name} (ID: ${product.id}) - R$ ${product.price}`)
      })
      
      // Verificar se s√£o produtos do Varejo F√°cil ou do data.ts
      const firstProduct = products[0]
      if (firstProduct.varejoFacilData) {
        console.log('\n‚úÖ Produtos s√£o do Varejo F√°cil (products.json)')
        console.log(`   - C√≥digo interno: ${firstProduct.varejoFacilData.codigoInterno}`)
        console.log(`   - Se√ß√£o ID: ${firstProduct.varejoFacilData.secaoId}`)
      } else {
        console.log('\n‚ö†Ô∏è Produtos parecem ser do data.ts (produtos est√°ticos)')
      }
    }
    
    // Testar carregamento de categorias
    console.log('\nüìÇ Carregando categorias...')
    const categories = await getDynamicCategories()
    console.log(`‚úÖ Categorias carregadas: ${categories.length}`)
    console.log('üìã Categorias:', categories.slice(0, 10))
    
  } catch (error) {
    console.error('‚ùå Erro ao testar carregamento:', error)
  }
}

// Executar teste
testCatalogLoading()
